CREATE TABLE locations
(
    id_location   BIGSERIAL    NOT NULL, -- identificador de la ubicación
    code_location UUID         NOT NULL, -- código único de la ubicación
    location      VARCHAR(255) NOT NULL, -- ubicación
    country       VARCHAR(255) NOT NULL, -- pais
    city          VARCHAR(255) NULL      -- ciudad
);

CREATE TABLE modules
(
    id_module   BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    code_module VARCHAR(3)                              NOT NULL,
    module      VARCHAR(200)                            NOT NULL
);

CREATE TABLE role_modules
(
    id_module BIGINT NOT NULL,
    id_role   BIGINT NOT NULL
);

CREATE TABLE roles
(
    id_role   BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    code_role VARCHAR(2)                              NOT NULL,
    role      VARCHAR(50)                             NOT NULL
);

CREATE TABLE user_roles
(
    id_role BIGINT NOT NULL,
    id_user BIGINT NOT NULL
);

CREATE TABLE users
(
    id_user            BIGSERIAL                NOT NULL,               -- identificador del usuario
    code_user          UUID                     NOT NULL,               -- código único del usuario
    username           VARCHAR(50)              NOT NULL,               -- usuario de registro
    name               VARCHAR(50)              NULL,                   -- nombre real
    surname1           VARCHAR(50)              NULL,                   -- apellido 1 real
    surname2           VARCHAR(50)              NULL,                   -- aprellido 2 real
    email              VARCHAR(100)             NOT NULL,               -- email de registro y método de contacto
    phone              VARCHAR(50)              NULL,                   -- para posible verificación en 2 pasos
    password           VARCHAR(255)             NOT NULL,               -- contraseña de registro hasheada
    id_location        BIGINT                   NULL,                   -- identificador del pais para bandera
    registration_date  TIMESTAMP WITH TIME ZONE NULL,                   -- fecha y hora del registro
    verification_token VARCHAR(20)              NULL,                   -- token para habilitar
    enabled            BOOLEAN                  NOT NULL default false, -- si está habilitado (0: no, 1: si)
    login_attempts     INTEGER                  NOT NULL default 0,     -- cantidad de intentos mas de 'x' sin acertar bloquea la cuenta
    login_date         TIMESTAMP WITH TIME ZONE NULL,                   -- fecha y hora del ultimo acceso
    banned             BOOLEAN                  NOT NULL default false, -- si esta banneado (0: no, 1: si)
    ban_date           TIMESTAMP WITH TIME ZONE NULL,                   -- fecha y hora del baneo
    ban_reason         VARCHAR(255)             NULL                    -- razón del baneo
);

ALTER TABLE locations
    ADD CONSTRAINT pk_locations PRIMARY KEY (id_location),
    ADD CONSTRAINT uk_locations UNIQUE (code_location);

ALTER TABLE modules
    ADD CONSTRAINT pk_modules PRIMARY KEY (id_module),
    ADD CONSTRAINT uk_modules UNIQUE (code_module);

ALTER TABLE roles
    ADD CONSTRAINT pk_roles PRIMARY KEY (id_role),
    ADD CONSTRAINT uk_roles UNIQUE (code_role);

ALTER TABLE users
    ADD CONSTRAINT pk_users PRIMARY KEY (id_user),
    ADD CONSTRAINT uk_users_code UNIQUE (code_user),
    ADD CONSTRAINT uk_users_name UNIQUE (username),
    ADD CONSTRAINT uk_users_email UNIQUE (email),
    ADD CONSTRAINT fk_users_on_location FOREIGN KEY (id_location) REFERENCES locations (id_location);

ALTER TABLE role_modules
    ADD CONSTRAINT pk_role_modules PRIMARY KEY (id_module, id_role),
    ADD CONSTRAINT fk_rolmod_on_module FOREIGN KEY (id_module) REFERENCES modules (id_module),
    ADD CONSTRAINT fk_rolmod_on_role FOREIGN KEY (id_role) REFERENCES roles (id_role);

ALTER TABLE user_roles
    ADD CONSTRAINT pk_user_roles PRIMARY KEY (id_role, id_user),
    ADD CONSTRAINT fk_userol_on_role FOREIGN KEY (id_role) REFERENCES roles (id_role),
    ADD CONSTRAINT fk_userol_on_user FOREIGN KEY (id_user) REFERENCES users (id_user);